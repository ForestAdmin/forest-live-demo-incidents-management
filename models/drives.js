// This model was generated by Forest CLI. However, you remain in control of your models.
// Learn how here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models
module.exports = (sequelize, DataTypes) => {
  const { Sequelize } = sequelize;
  // This section contains the fields of your model, mapped to your table's columns.
  // Learn more here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models#declaring-a-new-field-in-a-model
  const Drives = sequelize.define('drives', {
    surcharge: {
      type: DataTypes.INTEGER,
    },
    commission: {
      type: DataTypes.FLOAT,
      defaultValue: 0.15,
    },
    startedAt: {
      type: DataTypes.DATE,
    },
    terminatedAt: {
      type: DataTypes.DATE,
    },
    km: {
      type: DataTypes.FLOAT,
    },
    status: {
      type: DataTypes.STRING,
    },
    pricePerKm: {
      type: DataTypes.FLOAT,
      defaultValue: 1.05,
    },
    pricePerMinute: {
      type: DataTypes.FLOAT,
      defaultValue: 0.3,
    },
    pickupFee: {
      type: DataTypes.FLOAT,
      defaultValue: 1.2,
    },
  }, {
    tableName: 'drives',
    underscored: true,
    timestamps: false,
    schema: process.env.DATABASE_SCHEMA,
  });

  // This section contains the relationships for this model. See: https://docs.forestadmin.com/documentation/v/v6/reference-guide/relationships#adding-relationships.
  Drives.associate = (models) => {
    Drives.belongsTo(models.customers, {
      foreignKey: {
        name: 'customerIdKey',
        field: 'customer_id',
      },
      as: 'customer',
    });
    Drives.belongsTo(models.drivers, {
      foreignKey: {
        name: 'driverIdKey',
        field: 'driver_id',
      },
      as: 'driver',
    });
    Drives.hasMany(models.issues, {
      foreignKey: {
        name: 'driveIdKey',
        field: 'drive_id',
      },
      as: 'issues',
    });
  };

  return Drives;
};
